<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	xsi:schemaLocation="http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-3.2.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd
		http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.1.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd">

	<!-- Enable the method security to use the @PreAuthorize, @PreFilter, @PostAuthorize 
		and @PostFilter annotations in methods and secure it. -->
	<global-method-security pre-post-annotations="enabled"
		secured-annotations="enabled" />

	<mvc:annotation-driven />
	
	<http security="none" pattern="/resources/**"></http>
	
	<!-- secure the applicationÂ´s urls with the specific Role -->
	<http auto-config="false" use-expressions="true"
		access-denied-page="/accessdenied" >
		<session-management  invalid-session-url="/login" ></session-management>
		
		<intercept-url pattern="/login" access="permitAll" />
		<intercept-url pattern="/userRegistration" access="permitAll" />
		<intercept-url pattern="/logout" access="permitAll" />
		<intercept-url pattern="/accessdenied" access="permitAll" />
		<intercept-url pattern="/accessdeniedForLogin" access="permitAll" />
		<intercept-url pattern="/error" access="permitAll" />
		
		<intercept-url pattern="/landingpage/*" access="hasAnyRole('ROLE_ADMIN','ROLE_RMG','ROLE_RMG_ADMIN')" />
		<intercept-url pattern="/dashboard*" access="hasAnyRole('ROLE_ADMIN')" />
		<intercept-url pattern="/rmgdashboard*" access="hasAnyRole('ROLE_RMG')" />
		<intercept-url pattern="/rmgadmindashboard*" access="hasAnyRole('ROLE_RMG_ADMIN')" />
		<intercept-url pattern="/workflowstats*" access="hasAnyRole('ROLE_ADMIN','ROLE_RMG','ROLE_RMG_ADMIN')" />
		<intercept-url pattern="/register*" access="hasAnyRole('ROLE_ADMIN','ROLE_RMG','ROLE_RMG_ADMIN')" />
		<intercept-url pattern="/landingpage" access="hasAnyRole('ROLE_USER')" />

		<intercept-url pattern="/approveFile" access="hasAnyRole('ROLE_ADMIN','ROLE_RMG','ROLE_RMG_ADMIN')" />
		<intercept-url pattern="/sendRegisterMail" access="hasAnyRole('ROLE_ADMIN','ROLE_RMG','ROLE_RMG_ADMIN')" />
		<intercept-url pattern="/rejectFile" access="hasAnyRole('ROLE_ADMIN','ROLE_RMG','ROLE_RMG_ADMIN')" />
		<intercept-url pattern="/uploadFile" access="hasAnyRole('ROLE_ADMIN','ROLE_RMG','ROLE_RMG_ADMIN','ROLE_USER' )" />
		<intercept-url pattern="/deleteFile" access="hasAnyRole('ROLE_ADMIN','ROLE_RMG','ROLE_RMG_ADMIN','ROLE_USER' )" />
		<intercept-url pattern="/deleteFolder" access="hasAnyRole('ROLE_ADMIN','ROLE_RMG','ROLE_RMG_ADMIN')" />
		<intercept-url pattern="/createFile" access="hasAnyRole('ROLE_ADMIN','ROLE_RMG','ROLE_RMG_ADMIN')" />
		<intercept-url pattern="/approveFolder" access="hasAnyRole('ROLE_ADMIN','ROLE_RMG','ROLE_RMG_ADMIN')" />
		<intercept-url pattern="/rejectFolder" access="hasAnyRole('ROLE_ADMIN','ROLE_RMG','ROLE_RMG_ADMIN')" />
		<intercept-url pattern="/makeEmployee" access="hasAnyRole('ROLE_ADMIN')" />
		<intercept-url pattern="/submitData" access="hasAnyRole('ROLE_USER')" />
		<intercept-url pattern="/enableUser" access="hasAnyRole('ROLE_ADMIN')" />
		<intercept-url pattern="/disableUser" access="hasAnyRole('ROLE_ADMIN')" />
		<intercept-url pattern="/downloadZip/*" access="hasAnyRole('ROLE_ADMIN')" />
		<intercept-url pattern="/sendmail" access="hasAnyRole('ROLE_ADMIN')" />
		<intercept-url pattern="/addrole" access="hasAnyRole('ROLE_ADMIN')" />
		<intercept-url pattern="/update*" access="hasAnyRole('ROLE_ADMIN','ROLE_RMG')" />
		<intercept-url pattern="/workflowStats" access="hasAnyRole('ROLE_ADMIN','ROLE_RMG','ROLE_RMG_ADMIN')" />
		<!-- <intercept-url pattern="/resources/*" access="permitAll"/> -->
		<!-- <intercept-url pattern="/**"
			access="hasAnyRole('ROLE_ADMIN','ROLE_USER','ROLE_NORMAL','ROLE_RMG', 'ROLE_RMG_ADMIN')" /> -->

		

		<form-login username-parameter="username"
			password-parameter="password" login-page="/login"
			authentication-failure-url="/login?auth=fail"
			authentication-success-handler-ref="myfilter"  />
		<logout invalidate-session="true" logout-success-url="/logout"/>
	</http>
	<beans:bean id="myfilter" class="com.infogain.edoc.utils.MyFilter"></beans:bean>


	<beans:bean id="contextSource"
		class="org.springframework.security.ldap.DefaultSpringSecurityContextSource">
		<beans:constructor-arg value="ldap://localhost:389" />
		<beans:property name="userDn" value="cn=Directory Manager" />
		<beans:property name="password" value="123" />
	</beans:bean>

	<beans:bean id="ldapAuthProvider"
		class="org.springframework.security.ldap.authentication.LdapAuthenticationProvider">
		<beans:constructor-arg name="authenticator">
			<beans:bean
				class="org.springframework.security.ldap.authentication.BindAuthenticator">
				<beans:constructor-arg ref="contextSource" />
				<beans:property name="userSearch">
					<beans:bean
						class="org.springframework.security.ldap.search.FilterBasedLdapUserSearch">
						<beans:constructor-arg name="searchBase"
							value="ou=edoc,dc=springframework,dc=org" />
						<beans:constructor-arg name="searchFilter"
							value="(uid={0})" />
						<beans:constructor-arg name="contextSource"
							ref="contextSource" />
					</beans:bean>
				</beans:property>
			</beans:bean>
		</beans:constructor-arg>
		<beans:constructor-arg name="authoritiesPopulator"
			ref="myLDAPAuthPopulator" />
	</beans:bean>

	<beans:bean id="userAuthenticate" class="com.infogain.edoc.utils.UserAuthenticate"></beans:bean>

	<authentication-manager alias="authenticationManager">
		<!-- <authentication-provider>
			
			<jdbc-user-service data-source-ref="dataSource"
				users-by-username-query="select username,password,pre_flag from pre_emp where username=?"
				authorities-by-username-query="select u1.username, r.role from user_role u1, roles r where u1.role_id = r.role_id and u1.username =?"
				 />
		</authentication-provider> -->
		
	
		<!-- <authentication-provider ref="userAuthenticate" /> -->
		<authentication-provider ref="ldapAuthProvider" />
		<authentication-provider>
			
			<jdbc-user-service data-source-ref="dataSource"
				users-by-username-query="select username,password,pre_flag from pre_emp where username=?"
				authorities-by-username-query="select u1.username, r.role from user_role u1, roles r where u1.role_id = r.role_id and u1.username =?"
				 />
		</authentication-provider>
		
		
	</authentication-manager>

<!-- <beans:bean id="dataSource" 
      class="org.springframework.jdbc.datasource.DriverManagerDataSource">
      <beans:property name="driverClassName" value="net.sourceforge.jtds.jdbc.Driver"/>
      <beans:property name="url" value="jdbc:jtds:sqlserver://quasrv:1433/edoc"/>
      <beans:property name="username" value="sa"/>
      <beans:property name="password" value="info123!"/>
   </beans:bean> -->

	<beans:bean id="dataSource" 
      class="org.springframework.jdbc.datasource.DriverManagerDataSource">
      <beans:property name="driverClassName" value="${db.driverClassName}"/>
      <beans:property name="url" value="${db.url}"/>
      <beans:property name="username" value="${db.username}"/>
      <beans:property name="password" value="${db.password}"/>
   </beans:bean>

<!-- <beans:bean id="dataSource" 
      class="org.springframework.jdbc.datasource.DriverManagerDataSource">
      <beans:property name="driverClassName" value="com.microsoft.sqlserver.jdbc.SQLServerDriver"/>
      <beans:property name="url" value="jdbc:sqlserver://AMANTKUMAR\SQLEXPRESS:1433;DatabaseName=edoc;integratedSecurity=true"/>
   </beans:bean> -->

	<!-- <beans:bean id="dataSource" 
      class="org.springframework.jdbc.datasource.DriverManagerDataSource">
      <beans:property name="driverClassName" value="com.mysql.jdbc.Driver"/>
      <beans:property name="url" value="jdbc:mysql://localhost:3306/edoc"/>
      <beans:property name="username" value="root"/>
      <beans:property name="password" value="info123!"/>
   </beans:bean> -->



</beans:beans>